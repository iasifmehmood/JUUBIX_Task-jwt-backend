openapi: 3.0.3
info:
  title: User Management API
  description: An API for user management functionalities - signup, login, create, delete, and update user posts.
  version: 1.0.0

servers:
  - url: http://localhost:4000/

tags:
  - name: Signup-API
    description: User signup operations
  - name: Login-API
    description: User login operations
  - name: Post-API
    description: User post operations

paths:
  /users/signup:
    post:
      tags:
        - Signup-API
      summary: Add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEntity'
        400:
          description: Bad Request
        500:
          description: Internal server error

  /users/login:
    post:
      tags:
        - Login-API
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  loggedUser:
                    $ref: '#/components/schemas/UserEntity'
                  Token:
                    type: string
        400:
          description: Bad Request
        500:
          description: Internal server error

  /users/create:
    post:
      tags:
        - Post-API
      summary: Create a new post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDataDTO'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataEntity'
        400:
          description: Bad Request
        500:
          description: Internal server error

  /users/delete/{id}:
    delete:
      tags:
        - Post-API
      summary: Delete a post by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
        400:
          description: Bad Request
        404:
          description: Post not found
        500:
          description: Internal server error

  /users/post/{id}:
    get:
      tags:
        - Post-API
      summary: Get a post by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataEntity'
        400:
          description: Bad Request
        404:
          description: Post not found
        500:
          description: Internal server error

  /users/update/{id}:
    put:
      tags:
        - Post-API
      summary: Update a post by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDataDTO'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataEntity'
        400:
          description: Bad Request
        404:
          description: Post not found
        500:
          description: Internal server error

components:
  schemas:
    UserDTO:
      type: object
      properties:
        name:
          type: string
          example: 'John Doe'
        email:
          type: string
          example: 'john@example.com'
        password:
          type: string
          example: 'password123'

    LoginDTO:
      type: object
      properties:
        email:
          type: string
          example: 'john@example.com'
        password:
          type: string
          example: 'password123'

    UserEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: 'John Doe'
        email:
          type: string
          example: 'john@example.com'

    UserDataDTO:
      type: object
      properties:
        title:
          type: string
          example: 'Post Title'
        description:
          type: string
          example: 'Post Description'
        article:
          type: string
          example: 'Post Article'

    UserDataEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: 'Post Title'
        description:
          type: string
          example: 'Post Description'
        article:
          type: string
          example: 'Post Article'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
